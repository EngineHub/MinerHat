// $Id$
/*
 * Copyright (C) 2010, 2011 sk89q <http://www.sk89q.com>
*/

package com.sk89q.minerhat;

import bsh.EvalError;
import bsh.Interpreter;
import bsh.util.NameCompletionTable;
import java.awt.Color;
import java.awt.Font;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.Reader;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author sk89q
 */
public class MinecraftProxyFrame extends javax.swing.JFrame {
    
    private static final long serialVersionUID = 242573591431681904L;
    
    private MinecraftProxyServerClient client;
    private DefaultTreeModel statsTreeModel;
    private DefaultMutableTreeNode statsRoot;
    private Font consoleFont = new Font("Courier New", Font.PLAIN, 11);
    private Interpreter interpreter;

    public MinecraftProxyFrame(MinecraftProxyServerClient client) {
        this.client = client;
        initStatsTree();
        initComponents();
        console.setFont(consoleFont);
        logDisplay.setFont(consoleFont);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        statsTree.expandRow(0);
        initConsole();
    }

    private void initStatsTree() {
        statsRoot = new DefaultMutableTreeNode("Statistics");
        statsTreeModel = new DefaultTreeModel(statsRoot);
        DefaultMutableTreeNode node = new DefaultMutableTreeNode("Address: "
                + client.getLoggerId());
        statsRoot.add(node);
    }

    private void initConsole() {
        interpreter = new Interpreter(console);
        NameCompletionTable nct = new NameCompletionTable();
        nct.add(interpreter.getNameSpace());
        console.setNameCompletion(nct);
        new Thread(interpreter).start();
        try {
            interpreter.set("client", client);
        } catch (EvalError e) {
            log(e.getMessage());
        }
        try {
            interpreter.eval("import com.sk89q.minerhat.packets.*;");
            interpreter.eval("void send(Packet packet) { client.send(packet); }");
            interpreter.eval("void receive(Packet packet) { client.receive(packet); }");
        } catch (EvalError ex) {
        }
    }

    public void log(String text) {
        logDisplay.append(text + "\r\n");
        logDisplay.setCaretPosition(logDisplay.getText().length() - 1);
    }

    public void handleEndedConnection() {
        miClose.setEnabled(false);
    }

    public void addStatistic(String label, String text) {
        DefaultMutableTreeNode seedNode = new DefaultMutableTreeNode(label + ": " + text);
        statsTreeModel.insertNodeInto(seedNode, statsRoot, statsRoot.getChildCount());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        logDisplay = new javax.swing.JTextArea();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        console = new bsh.util.JConsole();
        jScrollPane2 = new javax.swing.JScrollPane();
        statsTree = new javax.swing.JTree();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        miClose = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        miEvalBSH = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSplitPane1.setDividerLocation(300);
        jSplitPane1.setDividerSize(2);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        logDisplay.setColumns(20);
        logDisplay.setEditable(false);
        logDisplay.setFont(new java.awt.Font("Monospaced", 0, 11));
        logDisplay.setRows(5);
        logDisplay.setTabSize(4);
        jScrollPane1.setViewportView(logDisplay);

        jSplitPane1.setBottomComponent(jScrollPane1);

        console.setWaitFeedback(true);
        jTabbedPane1.addTab("Console", console);

        statsTree.setModel(statsTreeModel);
        statsTree.setShowsRootHandles(true);
        jScrollPane2.setViewportView(statsTree);

        jTabbedPane1.addTab("Statistics", jScrollPane2);

        jSplitPane1.setLeftComponent(jTabbedPane1);

        jMenu1.setText("Connection");

        miClose.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        miClose.setText("Close");
        miClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miCloseActionPerformed(evt);
            }
        });
        jMenu1.add(miClose);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Scripting");

        miEvalBSH.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        miEvalBSH.setText("Evaluate .bsh...");
        miEvalBSH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miEvalBSHActionPerformed(evt);
            }
        });
        jMenu2.add(miEvalBSH);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void miCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miCloseActionPerformed
        client.stop();
    }//GEN-LAST:event_miCloseActionPerformed

    private void miEvalBSHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miEvalBSHActionPerformed
        String script = (String) JOptionPane.showInputDialog(this,
                    "Script filename:",
                    "Load BeanShell Script",
                    JOptionPane.PLAIN_MESSAGE);

        if (script != null && script.length() != 0) {
            try {
                File f = new File("scripts", script);
                Reader reader;
                try {
                    reader = new FileReader(f);
                } catch (FileNotFoundException e) {
                    f = new File("scripts", script + ".bsh");
                    reader = new FileReader(f);
                }

                console.println();
                console.print("Evaluating " + f.getAbsoluteFile() + "...", Color.BLUE);
                interpreter.eval(reader);
            } catch (EvalError e) {
                console.println();
                console.print("Script evaluation error: " + e.getMessage(), Color.RED);
            } catch (FileNotFoundException e) {
                console.println();
                console.print("Script not found: " + e.getMessage(), Color.RED);
            }
        }
    }//GEN-LAST:event_miEvalBSHActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private bsh.util.JConsole console;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea logDisplay;
    private javax.swing.JMenuItem miClose;
    private javax.swing.JMenuItem miEvalBSH;
    private javax.swing.JTree statsTree;
    // End of variables declaration//GEN-END:variables

}
